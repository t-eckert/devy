apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: tecke/devy-api:latest
        ports:
        - containerPort: 8080
        env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: "api-production"
                key: "database-url"
          - name: ROCKET_DATABASES
            valueFrom:
              secretKeyRef:
                name: "api-production"
                key: "database-url"
          - name: CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: "api-production"
                key: "client-id"
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: "api-production"
                key: "client-secret"
          - name: POST_AUTH_REDIRECT
            value: "https://devy.page"
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: default
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                "kubernetes.io/os": linux
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.devy.page
    secretName: tls-secret
  rules:
  - host: api.devy.page
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
