{
  "db_name": "PostgreSQL",
  "query": "SELECT\n\tpost.id as id,\n\tpost.slug as post_slug,\n\ttitle,\n\tbody,\n\tCOALESCE(likes.like_count, 0)::bigint AS likes,\n\tblog.slug as blog_slug,\n\tblog.name as blog_name,\n\t\"user\".username as author_slug,\n\tprofile.display_name as author_name,\n\tto_char(post.created_at, 'YYYY-MM-DDThh:mm:ss.ss\"Z\"') AS created_at,\n\tto_char(post.updated_at, 'YYYY-MM-DDThh:mm:ss.ss\"Z\"') AS updated_at\nFROM \"follow\"\n\tJOIN \"post\" ON follow.blog_id = post.blog_id\n \tJOIN \"blog\" ON post.blog_id = blog.id\n \tJOIN \"profile\" ON blog.profile_id = profile.id\n \tJOIN \"user\" ON profile.user_id = \"user\".id\n\tLEFT JOIN (\n\t\tSELECT post_id, COUNT(*) AS like_count\n\t\tFROM \"like\"\n\t\tGROUP BY post_id\n\t) AS likes ON post.id = likes.post_id\nORDER BY post.created_at DESC;\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "post_slug",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "title",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "body",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "likes",
        "type_info": "Int8"
      },
      {
        "ordinal": 5,
        "name": "blog_slug",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "blog_name",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "author_slug",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "author_name",
        "type_info": "Text"
      },
      {
        "ordinal": 9,
        "name": "created_at",
        "type_info": "Text"
      },
      {
        "ordinal": 10,
        "name": "updated_at",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": []
    },
    "nullable": [
      false,
      false,
      false,
      false,
      null,
      false,
      false,
      false,
      true,
      null,
      null
    ]
  },
  "hash": "fb571c5bcbfe746b527ac757b6953011d5e8431a466cc985eb553dd83d37ee91"
}
